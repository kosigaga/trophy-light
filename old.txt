// Welcome to the Soulmate IDE!

// Let's go through a few easy code examples to get started.

// You can edit the code in this text editor, and then press CMD+S to run your code.

// This draw() function is called repeatedly while your Soulmate is on.

int width = 10;

CRGB row1[18];
CRGB row2[18];
CRGB row3[18];
CRGB ball[4];

int iter = 0;
int maxiter = 15;

CRGB blue1 = CRGB(200, 200, 255);
CRGB blue2 = CRGB(150, 150, 255);
CRGB blue3 = CRGB(100, 100, 255);
CRGB blue4 = CRGB(50, 50, 255);

CRGB orange1 = CRGB(255, 200, 164);
CRGB orange2 = CRGB(255, 150, 82);
CRGB orange3 = CRGB(255, 100, 41);
CRGB orange4 = CRGB(255, 50, 20);

bool round = true;

void blueRound(){
  for (int index = 0; index < NUM_LEDS; index++) {
    leds[index] = CRGB::Gray;
  }
for (int index = 0; index < 18; index++) {
    row1[index] = CRGB::Gray;
    row2[index] = CRGB::Gray;
    row3[index] = CRGB::Gray;
  }

for (int i = 3; i < iter+3; i++) {
  row1[i] = blue1;
  row2[i] = blue1;
  row3[i] = blue1;
}

for (int i = 3-1; i < iter+3-1; i++) {
  row1[i] = blue2;
  row2[i] = blue2;
  row3[i] = blue2;
}
for (int i = 3-2; i < iter+3-2; i++) {
  row1[i] = blue3;
  row2[i] = blue3;
  row3[i] = blue3;
}

for (int i = 3-3; i < iter+3-3; i++) {
  row1[i] = blue4;
  row2[i] = blue4;
  row3[i] = blue4;
}

if(iter == maxiter-1)
{
  delay(500);
  for (int i = 0; i < width; i++) {
    leds[3*width+i] = blue4;
  }
}

for (int index = 0; index < width; index++) {
    leds[index] = row1[index+3];
    leds[2*width-1-index] = row2[index+3];
    leds[index+2*width] = row3[index+3];

  }

  ++iter;
  if(iter == maxiter)
  {
    iter = 0;
    round =!round;
  }

  delay(300);
}

void orangeRound(){
  for (int index = 0; index < NUM_LEDS; index++) {
    leds[index] = CRGB::Gray;
  }
for (int index = 0; index < 18; index++) {
    row1[index] = CRGB::Gray;
    row2[index] = CRGB::Gray;
    row3[index] = CRGB::Gray;
  }

for (int i = 3; i < iter+3; i++) {
  row1[i] = orange1;
  row2[i] = orange1;
  row3[i] = orange1;
}

for (int i = 3-1; i < iter+3-1; i++) {
  row1[i] = orange2;
  row2[i] = orange2;
  row3[i] = orange2;
}
for (int i = 3-2; i < iter+3-2; i++) {
  row1[i] = orange3;
  row2[i] = orange3;
  row3[i] = orange3;
}

for (int i = 3-3; i < iter+3-3; i++) {
  row1[i] = orange4;
  row2[i] = orange4;
  row3[i] = orange4;
}

if(iter == maxiter-1)
{
  delay(500);
  for (int i = 0; i < width; i++) {
    leds[3*width+i] = orange4;
  }
}

for (int index = 0; index < width; index++) {
    leds[index] = row1[index+3];
    leds[2*width-1-index] = row2[index+3];
    leds[index+2*width] = row3[index+3];

  }

  ++iter;
  if(iter == maxiter)
  {
    iter = 0;
    round =!round;

  }

  delay(300);
}

void draw() {
  if(round){
    orangeRound();
  }
  else{
    blueRound();
  }
}